// <auto-generated />
using System;
using Magva.Infra.Data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Magva.Infra.Data.Migrations
{
    [DbContext(typeof(MagvaDataContext))]
    partial class MagvaDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Magva.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("City")
                        .HasColumnType("Varchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnName("Complement")
                        .HasMaxLength(20);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("Country")
                        .HasColumnType("Varchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnName("District")
                        .HasColumnType("Varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnName("Number")
                        .HasMaxLength(10);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("State")
                        .HasColumnType("Varchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnName("Street")
                        .HasColumnType("Varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ZipeCode")
                        .IsRequired()
                        .HasColumnName("ZipeCode")
                        .HasColumnType("Varchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id")
                        .HasName("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Magva.Domain.Entities.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardBrand")
                        .IsRequired()
                        .HasColumnName("CardBrand")
                        .HasColumnType("Varchar(25)")
                        .HasMaxLength(25);

                    b.Property<Guid?>("CardholderNameId");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnName("ExpirationDate");

                    b.Property<bool>("HasPassword")
                        .HasColumnName("HasPassword");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnName("Number")
                        .HasMaxLength(19);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password");

                    b.Property<int>("Type")
                        .HasColumnName("Type");

                    b.HasKey("Id")
                        .HasName("Id");

                    b.HasIndex("CardholderNameId");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("Magva.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AddressId");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("BirthDate");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("Phone")
                        .HasColumnType("Varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id")
                        .HasName("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Magva.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount")
                        .HasColumnName("money")
                        .HasMaxLength(50);

                    b.Property<Guid?>("CardId");

                    b.Property<Guid?>("CustomerId");

                    b.Property<DateTime>("DateTransaction")
                        .HasColumnName("DateTransaction");

                    b.Property<int>("NumberInstallments")
                        .HasColumnName("Number");

                    b.Property<int>("Type")
                        .HasColumnName("Type");

                    b.HasKey("Id")
                        .HasName("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Magva.Domain.Entities.Card", b =>
                {
                    b.HasOne("Magva.Domain.Entities.Customer", "CardholderName")
                        .WithMany()
                        .HasForeignKey("CardholderNameId");
                });

            modelBuilder.Entity("Magva.Domain.Entities.Customer", b =>
                {
                    b.HasOne("Magva.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.OwnsOne("Magva.Domain.Shared.ValueObject.Document", "Document", b1 =>
                        {
                            b1.Property<Guid>("CustomerId");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnName("Number")
                                .HasColumnType("Varchar(11)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.HasOne("Magva.Domain.Entities.Customer")
                                .WithOne("Document")
                                .HasForeignKey("Magva.Domain.Shared.ValueObject.Document", "CustomerId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Magva.Domain.Shared.ValueObject.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("CustomerId");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("Varchar(25)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.HasOne("Magva.Domain.Entities.Customer")
                                .WithOne("Email")
                                .HasForeignKey("Magva.Domain.Shared.ValueObject.Email", "CustomerId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Magva.Domain.Shared.ValueObject.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("CustomerId");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnName("FirstName")
                                .HasColumnType("Varchar()");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnName("LastName")
                                .HasColumnType("Varchar(40)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.HasOne("Magva.Domain.Entities.Customer")
                                .WithOne("Name")
                                .HasForeignKey("Magva.Domain.Shared.ValueObject.Name", "CustomerId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Magva.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("Magva.Domain.Entities.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId");

                    b.HasOne("Magva.Domain.Entities.Customer", "Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
